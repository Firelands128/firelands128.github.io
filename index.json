[{"content":"Problem If the code is working fine on Android real device but not working on Android Emulator. For example, getting the below exception:\nE/AndroidRuntime( 4487): FATAL EXCEPTION: GLThread 58 E/AndroidRuntime( 4487): Process: com.morbit.amap_flutter_example, PID: 4487 E/AndroidRuntime( 4487): java.lang.RuntimeException: createContext failed: EGL_SUCCESS E/AndroidRuntime( 4487): at android.opengl.GLSurfaceView$EglHelper.throwEglException(GLSurfaceView.java:1223) E/AndroidRuntime( 4487): at android.opengl.GLSurfaceView$EglHelper.throwEglException(GLSurfaceView.java:1214) E/AndroidRuntime( 4487): at android.opengl.GLSurfaceView$EglHelper.start(GLSurfaceView.java:1064) E/AndroidRuntime( 4487): at android.opengl.GLSurfaceView$GLThread.guardedRun(GLSurfaceView.java:1431) E/AndroidRuntime( 4487): at android.opengl.GLSurfaceView$GLThread.run(GLSurfaceView.java:1272) E/AndroidRuntime( 4487): at android.opengl.GLSurfaceView$GLThread.run(GLSurfaceView.java:1272) E/AndroidRuntime( 4487): at android.opengl.GLSurfaceView$GLThread.run(GLSurfaceView.java:1272) E/AndroidRuntime( 4487): at android.opengl.GLSurfaceView$GLThread.run(GLSurfaceView.java:1272) E/AndroidRuntime( 4487): at android.opengl.GLSurfaceView$GLThread.run(GLSurfaceView.java:1272) E/AndroidRuntime( 4487): at android.opengl.GLSurfaceView$GLThread.run(GLSurfaceView.java:1272) E/AndroidRuntime( 4487): at android.opengl.GLSurfaceView$GLThread.run(GLSurfaceView.java:1272) E/AndroidRuntime( 4487): at android.opengl.GLSurfaceView$GLThread.run(GLSurfaceView.java:1272) E/AndroidRuntime( 4487): at android.opengl.GLSurfaceView$GLThread.run(GLSurfaceView.java:1272) E/AndroidRuntime( 4487): at android.opengl.GLSurfaceView$GLThread.run(GLSurfaceView.java:1272) E/AndroidRuntime( 4487): at android.opengl.GLSurfaceView$GLThread.run(GLSurfaceView.java:1272) E/AndroidRuntime( 4487): at android.opengl.GLSurfaceView$GLThread.run(GLSurfaceView.java:1272) E/AndroidRuntime( 4487): at android.opengl.GLSurfaceView$GLThread.run(GLSurfaceView.java:1272) E/AndroidRuntime( 4487): at android.opengl.GLSurfaceView$GLThread.run(GLSurfaceView.java:1272) E/AndroidRuntime( 4487): at android.opengl.GLSurfaceView$GLThread.run(GLSurfaceView.java:1272) Solution Open the Entended Controls window of the Android Emulator, then open Settings section. Change OpenGL ES renderer from Autodetect based on host (default) to SwiftShader. Then, restart the Android Studio. After that my app began working perfectly.\nHere is a screenshot for clarity:\n","permalink":"https://firelands128.github.io/2024/03/08/how-to-fix-android-emulator-opengl-renderer-exception/","summary":"Read about how to configure Android Emulator OpenGL renderer Setting.","title":"How to fix Android Emulator OpenGL Renderer Exception"},{"content":"In Markdown, if we need corresponding syntax highlighting, we have to specify the languages of code block. Following is an example for highlighting c++ codes in markdown texts:\n```cpp bool getBit(int num, int i) { return ((num \u0026amp; (1\u0026lt;\u0026lt;i)) != 0); } ``` Which becomes:\nbool getBit(int num, int i) { return ((num \u0026amp; (1\u0026lt;\u0026lt;i)) != 0); } Note: The programming languages supported by the markdown depends on the markdown editor you use. The editor need to detect the language and do the syntax highlight.\nHere\u0026rsquo;s a full list of supported languages:\nCucumber (\u0026rsquo;*.feature') abap (\u0026rsquo;*.abap') ada (\u0026rsquo;.adb\u0026rsquo;, \u0026lsquo;.ads\u0026rsquo;, \u0026lsquo;*.ada\u0026rsquo;) ahk (\u0026rsquo;.ahk\u0026rsquo;, \u0026lsquo;.ahkl\u0026rsquo;) apacheconf (\u0026rsquo;.htaccess\u0026rsquo;, \u0026lsquo;apache.conf\u0026rsquo;, \u0026lsquo;apache2.conf\u0026rsquo;) applescript (\u0026rsquo;*.applescript\u0026rsquo;) as (\u0026rsquo;*.as\u0026rsquo;) as3 (\u0026rsquo;*.as') asy (\u0026rsquo;*.asy') bash (\u0026rsquo;.sh\u0026rsquo;, \u0026lsquo;.ksh\u0026rsquo;, \u0026lsquo;.bash\u0026rsquo;, \u0026lsquo;.ebuild\u0026rsquo;, \u0026lsquo;*.eclass\u0026rsquo;) bat (\u0026rsquo;.bat\u0026rsquo;, \u0026lsquo;.cmd\u0026rsquo;) befunge (\u0026rsquo;*.befunge\u0026rsquo;) blitzmax (\u0026rsquo;*.bmx\u0026rsquo;) boo (\u0026rsquo;*.boo\u0026rsquo;) brainfuck (\u0026rsquo;.bf\u0026rsquo;, \u0026lsquo;.b\u0026rsquo;) c (\u0026rsquo;.c\u0026rsquo;, \u0026lsquo;.h\u0026rsquo;) cfm (\u0026rsquo;.cfm\u0026rsquo;, \u0026lsquo;.cfml\u0026rsquo;, \u0026lsquo;*.cfc\u0026rsquo;) cheetah (\u0026rsquo;.tmpl\u0026rsquo;, \u0026lsquo;.spt\u0026rsquo;) cl (\u0026rsquo;.cl\u0026rsquo;, \u0026lsquo;.lisp\u0026rsquo;, \u0026lsquo;*.el\u0026rsquo;) clojure (\u0026rsquo;.clj\u0026rsquo;, \u0026lsquo;.cljs\u0026rsquo;) cmake (\u0026rsquo;*.cmake\u0026rsquo;, \u0026lsquo;CMakeLists.txt\u0026rsquo;) coffeescript (\u0026rsquo;*.coffee\u0026rsquo;) console (\u0026rsquo;*.sh-session\u0026rsquo;) control (\u0026lsquo;control\u0026rsquo;) cpp (\u0026rsquo;.cpp\u0026rsquo;, \u0026lsquo;.hpp\u0026rsquo;, \u0026lsquo;.c++\u0026rsquo;, \u0026lsquo;.h++\u0026rsquo;, \u0026lsquo;.cc\u0026rsquo;, \u0026lsquo;.hh\u0026rsquo;, \u0026lsquo;.cxx\u0026rsquo;, \u0026lsquo;.hxx\u0026rsquo;, \u0026lsquo;*.pde\u0026rsquo;) csharp (\u0026rsquo;*.cs\u0026rsquo;) css (\u0026rsquo;*.css\u0026rsquo;) cython (\u0026rsquo;.pyx\u0026rsquo;, \u0026lsquo;.pxd\u0026rsquo;, \u0026lsquo;*.pxi\u0026rsquo;) d (\u0026rsquo;.d\u0026rsquo;, \u0026lsquo;.di\u0026rsquo;) delphi (\u0026rsquo;*.pas\u0026rsquo;) diff (\u0026rsquo;.diff\u0026rsquo;, \u0026lsquo;.patch\u0026rsquo;) dpatch (\u0026rsquo;.dpatch\u0026rsquo;, \u0026lsquo;.darcspatch\u0026rsquo;) duel (\u0026rsquo;.duel\u0026rsquo;, \u0026lsquo;.jbst\u0026rsquo;) dylan (\u0026rsquo;.dylan\u0026rsquo;, \u0026lsquo;.dyl\u0026rsquo;) erb (\u0026rsquo;*.erb\u0026rsquo;) erl (\u0026rsquo;*.erl-sh\u0026rsquo;) erlang (\u0026rsquo;.erl\u0026rsquo;, \u0026lsquo;.hrl\u0026rsquo;) evoque (\u0026rsquo;*.evoque\u0026rsquo;) factor (\u0026rsquo;*.factor\u0026rsquo;) felix (\u0026rsquo;.flx\u0026rsquo;, \u0026lsquo;.flxh\u0026rsquo;) fortran (\u0026rsquo;.f\u0026rsquo;, \u0026lsquo;.f90\u0026rsquo;) gas (\u0026rsquo;.s\u0026rsquo;, \u0026lsquo;.S\u0026rsquo;) genshi (\u0026rsquo;*.kid\u0026rsquo;) glsl (\u0026rsquo;.vert\u0026rsquo;, \u0026lsquo;.frag\u0026rsquo;, \u0026lsquo;*.geo\u0026rsquo;) gnuplot (\u0026rsquo;.plot\u0026rsquo;, \u0026lsquo;.plt\u0026rsquo;) go (\u0026rsquo;*.go\u0026rsquo;) groff (\u0026rsquo;.(1234567)\u0026rsquo;, \u0026lsquo;.man\u0026rsquo;) haml (\u0026rsquo;*.haml') haskell (\u0026rsquo;*.hs') html (\u0026rsquo;.html\u0026rsquo;, \u0026lsquo;.htm\u0026rsquo;, \u0026lsquo;.xhtml\u0026rsquo;, \u0026lsquo;.xslt\u0026rsquo;) hx (\u0026rsquo;*.hx\u0026rsquo;) hybris (\u0026rsquo;.hy\u0026rsquo;, \u0026lsquo;.hyb\u0026rsquo;) ini (\u0026rsquo;.ini\u0026rsquo;, \u0026lsquo;.cfg\u0026rsquo;) io (\u0026rsquo;*.io\u0026rsquo;) ioke (\u0026rsquo;*.ik') irc (\u0026rsquo;*.weechatlog') jade (\u0026rsquo;*.jade') java (\u0026rsquo;*.java') js (\u0026rsquo;*.js') jsp (\u0026rsquo;*.jsp') lhs (\u0026rsquo;*.lhs') llvm (\u0026rsquo;*.ll') logtalk (\u0026rsquo;*.lgt') lua (\u0026rsquo;.lua\u0026rsquo;, \u0026lsquo;.wlua\u0026rsquo;) make (\u0026rsquo;.mak\u0026rsquo;, \u0026lsquo;Makefile\u0026rsquo;, \u0026lsquo;makefile\u0026rsquo;, \u0026lsquo;Makefile.\u0026rsquo;, \u0026lsquo;GNUmakefile\u0026rsquo;) mako (\u0026rsquo;*.mao\u0026rsquo;) maql (\u0026rsquo;*.maql\u0026rsquo;) mason (\u0026rsquo;.mhtml\u0026rsquo;, \u0026lsquo;.mc\u0026rsquo;, \u0026lsquo;*.mi\u0026rsquo;, \u0026lsquo;autohandler\u0026rsquo;, \u0026lsquo;dhandler\u0026rsquo;) markdown (\u0026rsquo;*.md\u0026rsquo;) modelica (\u0026rsquo;*.mo\u0026rsquo;) modula2 (\u0026rsquo;.def\u0026rsquo;, \u0026lsquo;.mod\u0026rsquo;) moocode (\u0026rsquo;*.moo\u0026rsquo;) mupad (\u0026rsquo;*.mu\u0026rsquo;) mxml (\u0026rsquo;*.mxml') myghty (\u0026rsquo;*.myt\u0026rsquo;, \u0026lsquo;autodelegate\u0026rsquo;) nasm (\u0026rsquo;.asm\u0026rsquo;, \u0026lsquo;.ASM\u0026rsquo;) newspeak (\u0026rsquo;*.ns2') objdump (\u0026rsquo;*.objdump') objectivec (\u0026rsquo;*.m') objectivej (\u0026rsquo;*.j') ocaml (\u0026rsquo;.ml\u0026rsquo;, \u0026lsquo;.mli\u0026rsquo;, \u0026lsquo;.mll\u0026rsquo;, \u0026lsquo;.mly\u0026rsquo;) ooc (\u0026rsquo;*.ooc\u0026rsquo;) perl (\u0026rsquo;.pl\u0026rsquo;, \u0026lsquo;.pm\u0026rsquo;) php (\u0026rsquo;.php\u0026rsquo;, \u0026lsquo;.php(345)\u0026rsquo;) postscript (\u0026rsquo;.ps\u0026rsquo;, \u0026lsquo;.eps\u0026rsquo;) pot (\u0026rsquo;.pot\u0026rsquo;, \u0026lsquo;.po\u0026rsquo;) pov (\u0026rsquo;.pov\u0026rsquo;, \u0026lsquo;.inc\u0026rsquo;) prolog (\u0026rsquo;.prolog\u0026rsquo;, \u0026lsquo;.pro\u0026rsquo;, \u0026lsquo;*.pl\u0026rsquo;) properties (\u0026rsquo;*.properties\u0026rsquo;) protobuf (\u0026rsquo;*.proto\u0026rsquo;) py3tb (\u0026rsquo;*.py3tb') pytb (\u0026rsquo;*.pytb') python (\u0026rsquo;.py\u0026rsquo;, \u0026lsquo;.pyw\u0026rsquo;, \u0026lsquo;.sc\u0026rsquo;, \u0026lsquo;SConstruct\u0026rsquo;, \u0026lsquo;SConscript\u0026rsquo;, \u0026lsquo;.tac\u0026rsquo;) r (\u0026rsquo;*.R\u0026rsquo;) rb (\u0026rsquo;.rb\u0026rsquo;, \u0026lsquo;.rbw\u0026rsquo;, \u0026lsquo;Rakefile\u0026rsquo;, \u0026lsquo;.rake\u0026rsquo;, \u0026lsquo;.gemspec\u0026rsquo;, \u0026lsquo;.rbx\u0026rsquo;, \u0026lsquo;.duby\u0026rsquo;) rconsole (\u0026rsquo;*.Rout\u0026rsquo;) rebol (\u0026rsquo;.r\u0026rsquo;, \u0026lsquo;.r3\u0026rsquo;) redcode (\u0026rsquo;*.cw\u0026rsquo;) rhtml (\u0026rsquo;*.rhtml\u0026rsquo;) rst (\u0026rsquo;.rst\u0026rsquo;, \u0026lsquo;.rest\u0026rsquo;) sass (\u0026rsquo;*.sass\u0026rsquo;) scala (\u0026rsquo;*.scala\u0026rsquo;) scaml (\u0026rsquo;*.scaml\u0026rsquo;) scheme (\u0026rsquo;*.scm\u0026rsquo;) scss (\u0026rsquo;*.scss\u0026rsquo;) smalltalk (\u0026rsquo;*.st') smarty (\u0026rsquo;*.tpl') sourceslist (\u0026lsquo;sources.list\u0026rsquo;) splus (\u0026rsquo;.S\u0026rsquo;, \u0026lsquo;.R\u0026rsquo;) sql (\u0026rsquo;*.sql') sqlite3 (\u0026rsquo;*.sqlite3-console') squidconf (\u0026lsquo;squid.conf\u0026rsquo;) ssp (\u0026rsquo;*.ssp') tcl (\u0026rsquo;*.tcl') tcsh (\u0026rsquo;.tcsh\u0026rsquo;, \u0026lsquo;.csh\u0026rsquo;) tex (\u0026rsquo;.tex\u0026rsquo;, \u0026lsquo;.aux\u0026rsquo;, \u0026lsquo;*.toc\u0026rsquo;) text (\u0026rsquo;*.txt\u0026rsquo;) v (\u0026rsquo;.v\u0026rsquo;, \u0026lsquo;.sv\u0026rsquo;) vala (\u0026rsquo;.vala\u0026rsquo;, \u0026lsquo;.vapi\u0026rsquo;) vbnet (\u0026rsquo;.vb\u0026rsquo;, \u0026lsquo;.bas\u0026rsquo;) velocity (\u0026rsquo;.vm\u0026rsquo;, \u0026lsquo;.fhtml\u0026rsquo;) vim (\u0026rsquo;*.vim\u0026rsquo;, \u0026lsquo;.vimrc\u0026rsquo;) xml (\u0026rsquo;.xml\u0026rsquo;, \u0026lsquo;.xsl\u0026rsquo;, \u0026lsquo;.rss\u0026rsquo;, \u0026lsquo;.xslt\u0026rsquo;, \u0026lsquo;.xsd\u0026rsquo;, \u0026lsquo;.wsdl\u0026rsquo;) xquery (\u0026rsquo;.xqy\u0026rsquo;, \u0026lsquo;.xquery\u0026rsquo;) xslt (\u0026rsquo;.xsl\u0026rsquo;, \u0026lsquo;.xslt\u0026rsquo;) yaml (\u0026rsquo;.yaml\u0026rsquo;, \u0026lsquo;.yml\u0026rsquo;) ","permalink":"https://firelands128.github.io/2024/03/07/markdown-supported-code-languages-list/","summary":"This is an article about the list of languages supported by Markdown.","title":"Markdown supported code languages list"},{"content":" Go to https://www.anaconda.com/download to download anaconda Open terminal and change directoray to where anaconda.sh is, then bash it. 1 bash Anaconda3-5.1.0-Linux-x86_64.sh Build anaconda environment named tensorflow 1 conda create --name tensorflow python=3 Active tensorflow environment 1 source activate tensorflow Install tensorflow 1 pip install --ignore-installed --upgrade https://storage.googleapis.com/tensorflow/linux/cpu/tensorflow-1.5.0-cp36-cp36m-linux_x86_64.whl To open anaconda-navigator Install jupyter notebook in home window Import environment-cpu.yml to Anaconda 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 name: tf-cpu channels: - https://conda.anaconda.org/menpo - conda-forge dependencies: - python==3.5.2 - numpy - matplotlib - jupyter - opencv3 - pillow - scikit-learn - scikit-image - scipy - h5py - eventlet - flask-socketio - seaborn - pandas - ffmpeg - imageio=2.1.2 - pyqt=4.11.4 - pip: - moviepy - tensorflow==1.4.0 - keras==2.0.8 Hit Environments in left column, run tf-cpu with jupyter notebook ","permalink":"https://firelands128.github.io/2018/02/18/install-tensorflow-with-anaconda/","summary":"Read about how to install Tensorflow within Anaconda environment.","title":"Install Tensorflow with Anaconda"},{"content":" Add virualbox USB extension pack Insert guest addition CD images Run software in CD driver Add user into vboxsf group: 1 sudo adduser [username] vboxsf ","permalink":"https://firelands128.github.io/2018/02/17/enable-clipboard-share-and-folder-share-on-virtualbox/","summary":"Read about how to enable clipboard share and folder share on VirtualBox.","title":"Enable clipboard share and folder share on VirtualBox"}]